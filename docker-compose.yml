version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: pos_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: pos_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - pos_network

  redis:
    image: redis:7-alpine
    container_name: pos_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - pos_network

  api:
    build: .
    container_name: pos_api
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: password
      DATABASE_NAME: pos_db
      DATABASE_SYNC: false
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_EXPIRES_IN: 24h
      PORT: 3000
      NODE_ENV: production
      CORS_ORIGIN: http://localhost:3001
    depends_on:
      - postgres
      - redis
    networks:
      - pos_network
    volumes:
      - ./uploads:/app/uploads

volumes:
  postgres_data:
  redis_data:

networks:
  pos_network:
    driver: bridge